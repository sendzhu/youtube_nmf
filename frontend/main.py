"""
–ü—Ä–æ–≥—Ä–∞–º–º–∞: Frontend —á–∞—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞
–í–µ—Ä—Å–∏—è: 1.0
"""

import streamlit as st
from src.plotting.charts import *
from src.data.save_data import load_comments

# from src.data.save_data import load_comments
# sys.path.insert(1, "/Users/pc/PycharmProjects/youtubeProject/backend/src/data")


def main_page():
    """
    –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞
    """
    st.image(
        "https://www.computerra.ru/wp-content/uploads/2019/08/data_science_5.png",
        width=600
    )

    st.markdown("# –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞")
    st.title(
        "MLOps project: Analysis of discussions in the comments of YouTube channels dedicated to Data Science üíª üí¨"
    )
    st.write(
        """
        –î–∞–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á—Ç–æ —á–∞—â–µ –≤—Å–µ–≥–æ –æ–±—Å—É–∂–¥–∞—é—Ç –ª—é–¥–∏ 
        –ø–æ–¥ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —é—Ç—É–± –∫–∞–Ω–∞–ª–æ–≤, –ø–æ—Å–≤—è—â–µ–Ω–Ω—ã—Ö Data Science
        """
    )


def exploratory():
    """
    Exploratory data analysis
    """
    st.markdown("# Exploratory data analysisÔ∏è")

    path = ["all_comments", "all_likes", "comms_for_likes", "clean_comms"]
    lst = load_comments(path)
    # load and write dataset
    all_comments, all_likes, comms_for_likes, clean_comms = (
        lst[0],
        lst[1],
        lst[2],
        lst[3],
    )

    # —Ç–æ–ø –∫–æ–º–º–æ–≤
    st.markdown("## –¢–æ–ø 10 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
    st.write(top_comments(likes=all_likes, comms=comms_for_likes))
    # —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –≤—Å–µ—Ö –∫–æ–º–º–µ–Ω—Ç–æ–≤
    st.markdown("## –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –≤—Å–µ—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
    st.pyplot(lenth_comms(all_comms=all_comments))
    # —Ç–æ–ø —Å–ª–æ–≤
    st.markdown("## –¢–æ–ø 10 —Å–ª–æ–≤")
    st.write(top_words(clean_comms=clean_comms))
    # —Ç–æ–ø –±–∏-–≥—Ä–∞–º–º–æ–≤
    st.markdown("## –¢–æ–ø 10 –±–∏-–≥—Ä–∞–º–º")
    st.set_option("deprecation.showPyplotGlobalUse", False)
    st.pyplot(bigrams(clean_comms=clean_comms))


def result():
    """
    –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    """
    topics = load_comments(["topics"])
    topics = topics[0]

    st.markdown("## –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ç–µ–º–∞—Ç–∏–∫–∏")
    st.write(pd.DataFrame(topics))


def main():
    """
    –°–±–æ—Ä–∫–∞ –ø–∞–π–ø–ª–∞–π–Ω–∞ –≤ –æ–¥–Ω–æ–º –±–ª–æ–∫–µ
    """
    page_names_to_funcs = {
        "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞": main_page,
        "–†–∞–∑–≤–µ–¥–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö": exploratory,
        "–ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç": result,
    }
    selected_page = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç", page_names_to_funcs.keys())
    page_names_to_funcs[selected_page]()


if __name__ == "__main__":
    main()
